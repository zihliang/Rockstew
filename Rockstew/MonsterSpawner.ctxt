#BlueJ class context
comment0.target=MonsterSpawner
comment0.text=\r\n\ Write\ a\ description\ of\ class\ MonsterSpawner\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=void\ act()
comment1.text=int\ enemyCount,\r\n\t\tmapWidth,\r\n\t\tmapLength,\r\n\t\tspawnSpotX,\r\n\t\tspawnSpotY;\r\n\t\t\r\n\t//final\ for\ controlling\ the\ emenies\ on\ screen\ \r\n\tfinal\ int\ ENEMY_LIMIT\ \=\ 20;\r\n\t\r\n\t//testing\ construstor\ for\ manuel\ input\ of\ enemies\r\n\tpublic\ MonsterSpawner(int\ enemies,\ int\ mapW,\ int\ mapL){\r\n\t\tenemyCount\ \=\ enemies;\r\n\t\tmapWidth\ \=\ mapW;\r\n\t\tmapLength\ \=\ mapL;\r\n\t}\r\n\t\r\n\t//basic\ constructor\ to\ automatically\ spawn\r\n\tpublic\ MonsterSpawner(){\r\n\t\tenemyCount\ \=\ getEnemyArrayLength();\r\n\t\tmapWidth\ \=\ getMapWidth();\r\n\t\tmapLength\ \=\ getMapLength();\r\n\t}\r\n\t\r\n\t//to\ manipulate\ the\ enemy\ array\ by\ adding\ enemies\r\n\tprivate\ int\ getEnemyArrayLength(){\r\n\t\treturn\ (((World1)\ getWorld()).getEnemyCount());\r\n\t}\r\n\t\r\n\t//needs\ to\ be\ modified\ to\ be\ useful\r\n\tprivate\ int\ getMapWidth(){\r\n\t\treturn\ map.getMapWidth();\r\n\t}\r\n\t\r\n\t//same\ as\ method\ above\r\n\tprivate\ int\ getMapLength(){\r\n\t\treturn\ map.getMapLength();\r\n\t}\r\n\t\r\n\t//random\ location\ within\ the\ map\ bounds\r\n\tprivate\ void\ spawnLocation(){\r\n\t\tspawnSpotX\ \=\ (int)((double)mapWidth\ *\ Math.random());\r\n\t\tspawnSpotY\ \=\ (int)((double)mapLength\ *\ Math.random());\r\n\t}\r\n\t\r\n\t//checks\ if\ monster\ spawns\ within\ a\ wall,\ needs\ to\ be\ modified\ for\ functionality\ change\r\n\tprivate\ boolean\ checkBounds(){\ //not\ important?\ tries\ to\ figure\ out\ if\ enemies\ spawn\ in\ bounds.\ change\ it\r\n\t\tif(spawnSpotX\ >\=\ 0\ &&\ spawnSpotY\ >\=\ 0)\r\n\t\t\treturn\ map.mapInbounds.contains(spawnSpotX,\ spawnSpotY);\t//replace\ with\ getter\ from\ world1\r\n\t}\r\n\t\r\n\t//modifier\ for\ changing\ the\ percent\ chance\ for\ a\ monster\ to\ spawn\r\n\tprivate\ boolean\ initialCheck(){\ //50%\ chance\ that\ enemies\ spawn\r\n\t\tif(Math.random()>.5)\r\n\t\t\treturn\ true;\r\n\t\treturn\ false;\r\n\t}\r\n\t\r\n\t//try\ to\ implement\ checkbounds()\ and\ initialCheck()\ as\ modifiers\ to\ the\ spawn\ rate\r\n\ \ \ \ public\ void\ spawne()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ for(int\ i\=0;i<(((World1).getWorld()).spawnrate);i++)\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ int\ a\=Greenfoot.getRandomNumber(0);\r\n\ \ \ \ \ \ \ \ \ \ \ \ if(a\=\=0)\r\n\ \ \ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ addObject(new\ Enemy(90),\ 1,\ 1);\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ if(a\=\=1)\r\n\ \ \ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //addObject(new\ Enemy(270),\ Greenfoot.getRandomNumber(18),\ 13);\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ if(a\=\=2)\r\n\ \ \ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //addObject(new\ Enemy(0),\ 0,\ Greenfoot.getRandomNumber(14));\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ if(a\=\=3)\r\n\ \ \ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //addObject(new\ Enemy(180),\ 17,\ Greenfoot.getRandomNumber(14));\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ }\r\n\ \ \ \ /**\r\n\ Act\ -\ do\ whatever\ the\ MonsterSpawner\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
numComments=2
